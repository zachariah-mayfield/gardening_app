name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install mypy pytest httpx

    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci

    - name: Run backend tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        cd backend
        python -m pytest app/__tests__/ -v

    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false

    - name: Lint frontend (minimal)
      run: |
        cd frontend
        npm run lint

    - name: Type check backend
      env:
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        cd backend/app
        mypy .
