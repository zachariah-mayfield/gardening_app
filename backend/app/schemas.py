# schemas.py

from pydantic import BaseModel


# This base schema defines the fields that all plant-related requests and responses will use.
# Pydantic's BaseModel provides data validation and serialization for FastAPI endpoints.
class PlantBase(BaseModel):
    name: str  # The name of the plant (required)
    description: str  # A short description of the plant (required)
    watering_schedule: str  # How often to water the plant (required)


# This schema is used for creating a new plant (POST requests).
# It inherits from PlantBase and does not add any new fields.
# The 'id' is not included here because it is generated by the database.
class PlantCreate(PlantBase):
    pass  # used for POST requests


# This schema is used for responses (GET requests, etc.).
# It includes the 'id' field, which is generated by the database and returned to the client.
class Plant(PlantBase):
    id: int  # returned in GET/response
